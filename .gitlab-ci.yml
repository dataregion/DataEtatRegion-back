stages:
  - üß™ test
  - üî® build
  - üê£ deploy

run_tests:
  stage: üß™ test
  image: python:3.11.5-slim
  before_script:
    - python --version
    - pip install -r requirements.txt
  script:
    - pip install pytest pytest-cov
    - cd tests
    - coverage run -m pytest
    - coverage report
    - coverage xml
  artifacts:
    paths:
      - tests/coverage.xml


run_black:
  stage: üß™ test
  image: pyfound/black:23.7.0
  only:
    - develop
    - /^chore.*$/
    - /^feature.*$/
    - /^fix.*$/
    - /^bugfix.*$/
    - /^hotfix.*$/
  script:
    - black --check .


.deploy-integ:
  stage: üê£ deploy
  script:
    - echo ${VERSION}
    - ssh ${USER_INTEG}@${SERVER_INTEG} "docker network create -d overlay --attachable app_network || true"
    - ssh ${USER_INTEG}@${SERVER_INTEG} "export VERSION=${VERSION};"'export $(cat ~/stack-nocode/livraison/env-file-integ);docker stack deploy --with-registry-auth --compose-file ~/stack-nocode/compose/integ/data-transform.yml '"${STACK_NAME}"


.build-docker:
  image: docker:stable-dind
  stage: üî® build
  variables:
    IMAGE: ""
    DOCKERFILE: ""
  script:
    - if [[ $VERSION_IMAGE == ""]]; then  echo "VERSION NOT SET"; VERSION_IMAGE=${CI_COMMIT_REF_SLUG}-snapshot; fi
    - echo ${VERSION_IMAGE}
    - echo $IMAGE
    - docker build -f ${DOCKERFILE} -t ${IMAGE} .
    - echo ${REGISTRY_PASSWORD} | docker login ${REGISTRY} -u ${REGISTRY_USER} --password-stdin
    - docker tag ${IMAGE} ${IMAGE}:${VERSION_IMAGE}
    - echo "push ${IMAGE}:${VERSION_IMAGE}" && docker push ${IMAGE}:${VERSION_IMAGE}

# job pour construction image docker
docker-build-snapshot:
  extends: .build-docker
  only:
    - develop
    - main
    - /^chore.*$/
    - /^feature.*$/
    - /^fix.*$/
    - /^bugfix.*$/
    - /^hotfix.*$/
  variables:
    IMAGE: "${REGISTRY}nocode/data-transform/${CI_COMMIT_REF_SLUG}"
    DOCKERFILE: "Dockerfile"
  before_script:
    - export VERSION_IMAGE="${CI_COMMIT_SHA:0:8}-snapshot"


docker-build-tags:
  extends: .build-docker
  only:
    - tags
  variables:
    IMAGE: "${REGISTRY}nocode/data-transform"
    DOCKERFILE: "Dockerfile"
  before_script:
    - export VERSION_IMAGE="${CI_COMMIT_REF_NAME}"


deploy-integ-tag:
  extends: .deploy-integ
  only:
    - tags
  before_script:
    - export VERSION=":${CI_COMMIT_REF_NAME}"

deploy-integ-snapshot:
  extends: .deploy-integ
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "main"'
      when: always
    - if: '$CI_COMMIT_BRANCH =~ "/^(fix|hotfix|feature|bugfix|chore).*\//"'
      when: manual
      allow_failure: true
    - when: never
  before_script:
    - export VERSION="/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA:0:8}-snapshot"
