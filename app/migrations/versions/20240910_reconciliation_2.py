"""empty message

Revision ID: 20240910_reconciliation_2
Revises: 20240718_reconciliation_ds
Create Date: 2024-09-12 15:31:24.062696

"""

from alembic import op
import sqlalchemy as sa
import logging


# revision identifiers, used by Alembic.
revision = "20240910_reconciliation_2"
down_revision = "20240718_reconciliation_ds"
branch_labels = None
depends_on = None


def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_audit():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_audit():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_settings():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_settings():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_demarches_simplifiees():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "reconciliations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("dossier_number", sa.Integer(), nullable=False),
        sa.Column("financial_ae_id", sa.Integer(), nullable=False),
        sa.Column("date_reconciliation", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["dossier_number"], ["dossiers.number"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("reconciliations", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_reconciliations_financial_ae_id"), ["financial_ae_id"], unique=True)

    # ### end Alembic commands ###


def downgrade_demarches_simplifiees():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("reconciliations", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_reconciliations_financial_ae_id"))

    op.drop_table("reconciliations")
    # ### end Alembic commands ###


# ###############################################################################
# Boilerplate
#
def _call(name):
    if name not in globals():
        logging.warning(f"Pas de fonction: '{name}'. la migration sera ignor√©e")
    else:
        globals()[name]()


def upgrade(engine_name):
    fn_name = f"upgrade_{engine_name}"
    _call(fn_name)


def downgrade(engine_name):
    fn_name = f"downgrade_{engine_name}"
    _call(fn_name)


# ###############################################################################
