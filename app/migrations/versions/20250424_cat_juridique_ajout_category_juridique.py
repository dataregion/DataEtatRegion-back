"""AJout category juridique

Revision ID: 20250424_cat_juridique
Revises: 20250403_hf_231_ademe_nullable
Create Date: 2025-04-24 14:04:07.662800

"""
from alembic import op
import logging

# revision identifiers, used by Alembic.
revision = '20250424_cat_juridique'
down_revision = '20250403_hf_231_ademe_nullable'
branch_labels = None
depends_on = None





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    sql_insert_cate = "INSERT INTO ref_categorie_juridique (code,type) VALUES ('2800','Entreprise') ON CONFLICT (code) DO NOTHING"
    op.execute(sql_insert_cate)
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_audit():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_audit():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_settings():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_settings():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


# ###############################################################################
# Boilerplate
#
def _call(name):
    if name not in globals():
        logging.warning(f"Pas de fonction: '{name}'. la migration sera ignor√©e")
    else:
        globals()[name]()

def upgrade(engine_name):
    fn_name = f"upgrade_{engine_name}"
    _call(fn_name)

def downgrade(engine_name):
    fn_name = f"downgrade_{engine_name}"
    _call(fn_name)

# ###############################################################################