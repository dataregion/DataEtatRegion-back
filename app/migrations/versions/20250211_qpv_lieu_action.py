"""empty message

Revision ID: 20250211_qpv_lieu_action
Revises: 20250205_add_column_financial
Create Date: 2025-02-11 09:30:15.488351

"""
from alembic import op
import sqlalchemy as sa
import logging
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20250211_qpv_lieu_action'
down_revision = '20250205_add_column_financial'
branch_labels = None
depends_on = None





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('qpv_lieu_action',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('code_reference', sa.String(), nullable=False),
        sa.Column('code_qpv', sa.String(), nullable=False),
        sa.Column('n_ej', sa.String(), nullable=False),
        sa.Column('annee', sa.Integer(), autoincrement=False, nullable=False),
        sa.Column('ratio_montant', sa.Float(decimal_return_scale=2), autoincrement=False, nullable=False),
        sa.Column('file_import_taskid', sa.String(length=255), nullable=True),
        sa.Column('file_import_lineno', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['code_qpv'], ['ref_qpv.code'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code_qpv', 'n_ej', name='uq_qpv_ej')
    )
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('qpv_lieu_action')
    # ### end Alembic commands ###


def upgrade_audit():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_audit():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_settings():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_settings():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_demarches_simplifiees():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_demarches_simplifiees():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


# ###############################################################################
# Boilerplate
#
def _call(name):
    if name not in globals():
        logging.warning(f"Pas de fonction: '{name}'. la migration sera ignor√©e")
    else:
        globals()[name]()

def upgrade(engine_name):
    fn_name = f"upgrade_{engine_name}"
    _call(fn_name)

def downgrade(engine_name):
    fn_name = f"downgrade_{engine_name}"
    _call(fn_name)

# ###############################################################################