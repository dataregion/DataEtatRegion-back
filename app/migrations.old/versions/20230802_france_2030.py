"""empty message

Revision ID: 72cb30957126
Revises: d1a470f3416f
Create Date: 2023-08-02 14:16:30.980282

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "72cb30957126"
down_revision = "d1a470f3416f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    table = op.create_table(
        "nomenclature_france_2030",
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("numero", sa.Integer(), nullable=False),
        sa.Column("mot", sa.String(length=255), nullable=False),
        sa.Column("phrase", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_table(
        "france_2030",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date_dpm", sa.Date(), nullable=True),
        sa.Column("operateur", sa.String(length=255), nullable=True),
        sa.Column("procedure", sa.String(length=255), nullable=True),
        sa.Column("nom_projet", sa.String(), nullable=True),
        sa.Column("nom_beneficiaire", sa.String(), nullable=True),
        sa.Column("typologie", sa.String(), nullable=True),
        sa.Column("nom_strategie", sa.String(), nullable=True),
        sa.Column("montant_subvention", sa.Float(), nullable=True),
        sa.Column("montant_avance_remboursable", sa.Float(), nullable=True),
        sa.Column("montant_aide", sa.Float(), nullable=True),
        sa.Column("siret", sa.String(), nullable=True),
        sa.Column("code_nomenclature", sa.String(), nullable=True),
        sa.Column("file_import_taskid", sa.String(length=255), nullable=True),
        sa.Column("file_import_lineno", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["code_nomenclature"],
            ["nomenclature_france_2030.code"],
        ),
        sa.ForeignKeyConstraint(
            ["siret"],
            ["ref_siret.code"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("file_import_taskid", "file_import_lineno", name="uq_file_line_import_france_2030"),
    )

    data_to_insert = [
        {
            "code": "Objectif 1",
            "numero": 1,
            "mot": "SMR",
            "phrase": "Faire émerger en France d’ici 2030 des réacteurs nucléaires de petite taille, innovants et avec une meilleure gestion des déchets",
        },
        {
            "code": "Objectif 3",
            "numero": 3,
            "mot": "décarb",
            "phrase": "Décarboner notre industrie et la production d'intrants",
        },
        {
            "code": "Objectif 2",
            "numero": 2,
            "mot": "Hydrogene/ENR",
            "phrase": "Faire de la France le leader de l'hydrogène décarboné et développer des technologies d’ENR à la pointe",
        },
        {
            "code": "Objectif 4",
            "numero": 4,
            "mot": "Avion",
            "phrase": "Produire en France, à l’horizon 2030, le premier avion bas-carbone",
        },
        {
            "code": "Objectif 5",
            "numero": 5,
            "mot": "Véhicules élect",
            "phrase": "Produire en France, à l’horizon 2030, près de 2 millions de véhicules électriques et hybrides",
        },
        {
            "code": "Objectif 6",
            "numero": 6,
            "mot": "Alimentation",
            "phrase": "Innover pour une alimentation saine, durable et traçable",
        },
        {
            "code": "Objectif 7",
            "numero": 7,
            "mot": "Santé",
            "phrase": "Produire en France au moins 20 bio-médicaments, notamment contre les cancers, les maladies chroniques et développer et produire des dispositifs médicaux innovants",
        },
        {
            "code": "Objectif 8",
            "numero": 8,
            "mot": "Culture",
            "phrase": "Placer la France à nouveau en tête de la production des contenus culturels et créatifs",
        },
        {
            "code": "Objectif 9",
            "numero": 9,
            "mot": "Spatial",
            "phrase": "Prendre tout notre part à la nouvelle aventure spatiale",
        },
        {
            "code": "Objectif 10",
            "numero": 10,
            "mot": "Grands fonds marins",
            "phrase": "Investir le champ des fonds marins",
        },
        {
            "code": "Levier 1",
            "numero": 11,
            "mot": "appro",
            "phrase": "Sécuriser l'accès aux matières premières",
        },
        {
            "code": "Levier 2",
            "numero": 12,
            "mot": "elec / rob",
            "phrase": "Sécuriser l’accès aux composants stratégiques, notamment électronique, robotique et machines intelligentes",
        },
        {
            "code": "Levier 3",
            "numero": 13,
            "mot": "formations",
            "phrase": "Développer les talents en construisant les formations de demain",
        },
        {
            "code": "Levier 4",
            "numero": 14,
            "mot": "numériques",
            "phrase": "Maîtriser les technologies numériques souveraines et sûres",
        },
        {
            "code": "Levier 5",
            "numero": 15,
            "mot": "capital / startup",
            "phrase": "Capital-Innovation de rupture, start-ups industrielles et accélération de la croissance",
        },
        {
            "code": "Levier 6",
            "numero": 16,
            "mot": "ESRI",
            "phrase": "Excellence de nos écosystèmes ESRI",
        },
        {
            "code": "Levier 7",
            "numero": 17,
            "mot": "Territoires",
            "phrase": "France 2030 régionalisé",
        },
    ]

    op.bulk_insert(table, data_to_insert)
    # suppression du type spécifique. Passage en string simple
    op.execute("ALTER TABLE audit.audit_update_data ALTER COLUMN data_type TYPE varchar(255) USING data_type::text;")
    op.execute("DROP TYPE datatype;")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.execute(
        "CREATE TYPE datatype AS ENUM('FINANCIAL_DATA_AE', 'FINANCIAL_DATA_CP', 'FRANCE_RELANCE','REFERENTIEL','ADEME')"
    )

    op.execute("ALTER TABLE audit.audit_update_data ALTER COLUMN data_type TYPE datatype USING data_type::datatype")
    op.drop_table("france_2030")
    op.drop_table("nomenclature_france_2030")
    # ### end Alembic commands ###
